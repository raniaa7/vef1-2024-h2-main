{
  "title": "JavaScript",
  "category": "javascript",
  "lectures": [
    {
      "slug": "js-basic",
      "title": "Gildi, t√Ωpur og virkjar",
      "content": [
        {
          "type": "quote",
          "data": "JavaScript er t√∫lka√∞ skriftum√°l, byggt √° pr√≥t√≥t√Ωpum me√∞ d√Ωnam√≠skar, veikar t√Ωpur, fyrsta flokks f√∂ll og stu√∞ning vi√∞ hlutbunda-, gildinga- og fallaforritun"
        },
        {
          "type": "text",
          "data": "√ûr√≥a√∞ af Brendon Eich hj√° Netscape kringum 1995 sem Mocha og LiveScript en nefnt JavaScript a√∞ lokum. √Å t√≠u d√∂gum! Sta√∞la√∞ hj√° ECMA, sem ECMAScript √°ri√∞ 1997. Fyrstu √∫tg√°fur ekki svo g√≥√∞ar og f√©kk √° sig √≥or√∞ sem scripting m√°l sem bara amat√∂rar notu√∞u. √ûroska√∞ist og var √∫tf√¶rt √≠ √∂llum v√∂frum. √ç dag ‚Äûforritunarm√°l vefsins‚Äú. Flestar, ef ekki allar, t√∂lvur √≠ dag innihalda a.m.k. einn JavaScript t√∫lk."
        },
        {
          "type": "quote",
          "data": "If you want to write imperative code that runs in a web browser, you only have one choice: JavaScript.",
          "attribute": "Resilient Web Design, chapter 4: Languages"
        },
        {
          "type": "heading",
          "data": "ECMAScript"
        },
        {
          "type": "list",
          "data": [
            "Fyrstu √∫tg√°fur, 1. og 2., 1997 og 1998",
            "3. √∫tg√°fa 1999, b√¶tti vi√∞ regular expressions, betri strengjame√∞h√∂ndlun, n√Ωjum st√Ωrisetningum o.fl.",
            "4. √∫tg√°fa var√∞ aldrei neitt",
            "5. √∫tg√°fa 2009, sk√Ωr√∞i √≥sk√Ωr atri√∞i og b√¶tti vi√∞ einhverri virkni √≠ m√°li√∞",
            "ECMAScript 6, (ECMAScript 2015) kom √∫t √≠ j√∫n√≠ 2015 og innh√©lt marga n√Ωja f√≠tusa"
          ]
        },
        {
          "type": "quote",
          "data": "JavaScript borrows most of its syntax from Java, but also inherits from Awk and Perl, with some indirect influence from Self in its object prototype system.",
          "attribute": "JavaScript 1.1 specification"
        },
        {
          "type": "text",
          "data": "Breytur √≠ JavaScript hafa ekki t√Ωpu, gildi hafa t√Ωpu: number, string, boolean, undefined, function e√∞a object"
        },
        {
          "type": "code",
          "data": "let foo;\n// foo er skilgreind breyta me√∞ engu gildi ‚Äî undefined\nconsole.log(typeof foo); // undefined\n\n// ef vi√∞ myndum keyra l√≠nu a√∞ ne√∞an myndum vi√∞ f√° SyntaxError\n// og forriti√∞ okkar myndi h√¶tta keyrslu\n// let foo = 'bar';\n\nconst foo2 = 'bar';\n\n// breytur √≠ JavaScript eru d√Ωnam√≠skar\nlet a = 'hall√≥ heimur';\n\nconsole.log(a); // \"hall√≥ heimur\"\n\na = 1;\n\nconsole.log(a); // 1\n\na = false;\n\nconsole.log(a); // false\n\na = undefined;\n\nconsole.log(a); // undefined\n\nconst FOO = 1;\n\n// ef vi√∞ myndum keyra l√≠nu a√∞ ne√∞an myndum vi√∞ f√° TypeError\n// og forriti√∞ okkar myndi h√¶tta keyrslu\n// FOO = 2;\n\n// getum nefnt breytur me√∞ $, _ og √≠slenskum st√∂fum\n// en megum ekki byrja √° t√∂lustaf\n\nconst j√≥$$$ = 'üòé';\n\n// ef vi√∞ myndum keyra l√≠nur a√∞ ne√∞an myndum vi√∞ f√° SyntaxError\n// og forriti√∞ okkar myndi h√¶tta keyrslu\n// let foo#% = 1;\n// let 1bar = 2;\n// let class = 'foo';\n\n// window inniheldur umhverfi√∞ √≠ vafra en process √≠ node.js\nconsole.log(window);\n\n// hlutir sem eru almennt a√∞gengilegir eru bundnir vi√∞ window\nconsole.log(window.parseInt === parseInt); // true\n"
        }
      ]
    },
    {
      "slug": "js-array",
      "title": "Array & objects",
      "content": [
        {
          "type": "heading",
          "data": "Array"
        },
        {
          "type": "list",
          "data": [
            "Fylki leyfa okkur a√∞ safna hlutum √≠ ra√∞a√∞a lista",
            "B√∫um til array me√∞ []",
            "N√°lgumst gildi innan fylkis me√∞ bracket notation",
            "length skilar fj√∂lda staka √≠ fylki, fr√° 0 til st√¶rsta index"
          ]
        },
        {
          "type": "code",
          "data": "const list = [1, 2, 3];\n\nconsole.log(list.length); // 3\n\n// m√° √æ√≥ a√∞ vi√∞ h√∂fum skilgreint sem const\nlist[100] = 1;\nconsole.log(list.length); // 101\n\n// √ûar sem vi√∞ skilgreinum list me√∞ const mun eftirfarandi kasta villu\n// list = ''; // TypeError\n\nconst a = 'hello world';\nconsole.log(a.length); // 11\nconsole.log(a['length']); // 11\nconsole.log(a['1%-foo']); // undefined\n\n// √ìleyfilegt nafn, mun kasta villu\n// console.log(a.1%-foo); // SyntaxError\n\nconsole.log(a.toUpperCase()); // \"HELLO WORLD\"\n\nconst foo = [0, 1, 2];\nconsole.log(foo[0]); // 0\n\nconsole.log(foo.push('foo')); // 4\n\nconsole.log(foo.join(', ')); // '0, 1, 2, foo'\n\nconsole.log(foo.pop()); // 'foo'\n"
        },
        {
          "type": "heading",
          "data": "Object"
        },
        {
          "type": "list",
          "data": [
            "Byrjum √° a√∞ hugsa um object √≠ JavaScript sem geymslu fyrir gildi √æar sem gildi √° s√©r nafn",
            "Skilgreinum me√∞ `{}`, innan √æess skilgreinum vi√∞ eigindi hluts me√∞ heiti: gildi",
            "Eigindi eru oftast skilgreind eitt per l√≠nu til a√∞ auka lesanleika",
            "Ef vi√∞ bi√∞jum um eigindi sem ekki er skilgreint √° hlut f√°um vi√∞ undefined"
          ]
        },
        {
          "type": "code",
          "data": "const person = {\n  name: 'J√≥n J√≥nsson',\n\n  // √≥leyfilegt breytunafn √°n '\n  'home-address': 'A√∞algata 1',\n  age: 100,\n  registered: true,\n\n  // trailing comma\n  interests: [\n    'foo',\n    'bar',\n    'baz',\n  ],\n};\n\n\nconst a = {};\nconst key = 'bar';\n\na[key] = 'baz';\n\nconsole.log(a[key]); // baz\n\nconsole.log(a.bar); // baz\n\n\nconst obj = { foo: 1 };\nconsole.log(obj.foo); // 1\nconsole.log('foo' in obj); // true\n\nobj.bar = 'foo'; // \"foo\"\nobj['foo-bar'] = true; // true\nconsole.log(delete obj.foo); // true\n\nconsole.log('foo' in obj); // false\nconsole.log(obj); // { bar: \"foo\", foo-bar: true}\n\n\nconst foo = { x: 1, y: 2, z: 3 };\nconsole.log(Object.keys(foo)); // ['x', 'y', 'z']\nconsole.log(Object.values(foo)); // [1, 2, 3]\n\nObject.freeze(foo);\nconsole.log(delete foo.x); // false\n\n// afritum foo yfir √≠ bar\nconst bar = Object.assign({}, foo);\n\nconst baz = { a: true, x: 9 };\n\n// afritum foo yfir √≠ baz, yfirskrifar\nObject.assign(baz, foo);\n\nconsole.log(baz); // { a: true, x: 1, y: 2, z: 3  };\n"
        }
      ]
    }
  ]
}